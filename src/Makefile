# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/warzone2100
pkgincludedir = $(includedir)/warzone2100
pkglibdir = $(libdir)/warzone2100
pkglibexecdir = $(libexecdir)/warzone2100
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu

# Here, we need to set "plugins" for Qt5 to be static
# FIXME: At a future date, we should check if they want static builds, but, since we only support those for now...
#am__append_1 = -DQT_STATICPLUGIN
#am__append_2 = -DQT_STATICPLUGIN
#am__append_3 = -DQT_STATICPLUGIN
PROGRAMS = warzone2100$(EXEEXT)
#PROGRAMS = warzone2100_portable$(EXEEXT)
##am__append_4 = $(top_builddir)/lib/qtgame/libqtgame.a
#am__append_5 = $(top_builddir)/lib/qtgame/libqtgame.a
#am__append_6 = $(top_builddir)/lib/sdl/libsdl.a
am__append_7 = $(top_builddir)/lib/sdl/libsdl.a
##am__append_8 = $(top_builddir)/win32/warzone2100_portable.o $(WIN32_LIBS)
#am__append_9 = $(top_builddir)/win32/warzone2100.o  $(WIN32_LIBS)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_c_check_flag.m4 \
	$(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_prog_perl_version.m4 \
	$(top_srcdir)/m4/ax_with_prog.m4 $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/m4/progversion.m4 \
	$(top_srcdir)/m4/stack-protector.m4 \
	$(top_srcdir)/m4/strlfuncs.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
am__warzone2100_SOURCES_DIST = action.cpp advvis.cpp ai.cpp astar.cpp \
	atmos.cpp aud.cpp baseobject.cpp bucket3d.cpp challenge.cpp \
	cheat.cpp cmddroid.cpp combat.cpp component.cpp \
	configuration.cpp console.cpp data.cpp design.cpp \
	difficulty.cpp display3d.cpp display.cpp droid.cpp edit3d.cpp \
	effects.cpp feature.cpp fpath.cpp frontend.cpp game.cpp \
	gateway.cpp geometry.cpp group.cpp hci.cpp ingameop.cpp \
	init.cpp intdisplay.cpp intelmap.cpp intimage.cpp intorder.cpp \
	keybind.cpp keyedit.cpp keymap.cpp level_lexer.cpp levels.cpp \
	lighting.cpp loadsave.cpp loop.cpp main.cpp map.cpp \
	mapdisplay.cpp mapgrid.cpp mechanics.cpp message.cpp \
	miscimd.cpp mission.cpp modding.cpp move.cpp multibot.cpp \
	multigifts.cpp multiint.cpp multijoin.cpp multilimit.cpp \
	multimenu.cpp multiopt.cpp multiplay.cpp multistat.cpp \
	multistruct.cpp multisync.cpp objects.cpp objmem.cpp \
	oprint.cpp order.cpp pointtree.cpp power.cpp projectile.cpp \
	qtscript.cpp qtscriptdebug.cpp qtscriptfuncs.cpp radar.cpp \
	random.cpp raycast.cpp research.cpp scores.cpp scriptai.cpp \
	scriptcb.cpp scriptextern.cpp scriptfuncs.cpp scriptobj.cpp \
	scripttabs.cpp scriptvals.cpp scriptvals_lexer.cpp \
	scriptvals_parser.cpp selection.cpp seqdisp.cpp stats.cpp \
	structure.cpp template.cpp terrain.cpp text.cpp texture.cpp \
	transporter.cpp version.cpp visibility.cpp warcam.cpp \
	warzoneconfig.cpp wavecast.cpp wrappers.cpp \
	qtscriptdebug_moc.cpp
am__objects_1 = action.$(OBJEXT) advvis.$(OBJEXT) ai.$(OBJEXT) \
	astar.$(OBJEXT) atmos.$(OBJEXT) aud.$(OBJEXT) \
	baseobject.$(OBJEXT) bucket3d.$(OBJEXT) challenge.$(OBJEXT) \
	cheat.$(OBJEXT) cmddroid.$(OBJEXT) \
	combat.$(OBJEXT) component.$(OBJEXT) configuration.$(OBJEXT) \
	console.$(OBJEXT) data.$(OBJEXT) design.$(OBJEXT) \
	difficulty.$(OBJEXT) display3d.$(OBJEXT) display.$(OBJEXT) \
	droid.$(OBJEXT) edit3d.$(OBJEXT) effects.$(OBJEXT) \
	feature.$(OBJEXT) fpath.$(OBJEXT) frontend.$(OBJEXT) \
	game.$(OBJEXT) gateway.$(OBJEXT) geometry.$(OBJEXT) \
	group.$(OBJEXT) hci.$(OBJEXT) ingameop.$(OBJEXT) \
	init.$(OBJEXT) intdisplay.$(OBJEXT) intelmap.$(OBJEXT) \
	intimage.$(OBJEXT) intorder.$(OBJEXT) keybind.$(OBJEXT) \
	keyedit.$(OBJEXT) keymap.$(OBJEXT) level_lexer.$(OBJEXT) \
	levels.$(OBJEXT) lighting.$(OBJEXT) loadsave.$(OBJEXT) \
	loop.$(OBJEXT) main.$(OBJEXT) map.$(OBJEXT) \
	mapdisplay.$(OBJEXT) mapgrid.$(OBJEXT) mechanics.$(OBJEXT) \
	message.$(OBJEXT) miscimd.$(OBJEXT) mission.$(OBJEXT) \
	modding.$(OBJEXT) move.$(OBJEXT) multibot.$(OBJEXT) \
	multigifts.$(OBJEXT) multiint.$(OBJEXT) multijoin.$(OBJEXT) \
	multilimit.$(OBJEXT) multimenu.$(OBJEXT) multiopt.$(OBJEXT) \
	multiplay.$(OBJEXT) multistat.$(OBJEXT) multistruct.$(OBJEXT) \
	multisync.$(OBJEXT) objects.$(OBJEXT) objmem.$(OBJEXT) \
	oprint.$(OBJEXT) order.$(OBJEXT) pointtree.$(OBJEXT) \
	power.$(OBJEXT) projectile.$(OBJEXT) qtscript.$(OBJEXT) \
	qtscriptdebug.$(OBJEXT) qtscriptfuncs.$(OBJEXT) \
	radar.$(OBJEXT) random.$(OBJEXT) raycast.$(OBJEXT) \
	research.$(OBJEXT) scores.$(OBJEXT) scriptai.$(OBJEXT) \
	scriptcb.$(OBJEXT) scriptextern.$(OBJEXT) \
	scriptfuncs.$(OBJEXT) scriptobj.$(OBJEXT) scripttabs.$(OBJEXT) \
	scriptvals.$(OBJEXT) scriptvals_lexer.$(OBJEXT) \
	scriptvals_parser.$(OBJEXT) selection.$(OBJEXT) \
	seqdisp.$(OBJEXT) stats.$(OBJEXT) structure.$(OBJEXT) \
	template.$(OBJEXT) terrain.$(OBJEXT) text.$(OBJEXT) \
	texture.$(OBJEXT) transporter.$(OBJEXT) version.$(OBJEXT) \
	visibility.$(OBJEXT) warcam.$(OBJEXT) warzoneconfig.$(OBJEXT) \
	wavecast.$(OBJEXT) wrappers.$(OBJEXT)
am__objects_2 = qtscriptdebug_moc.$(OBJEXT)
am_warzone2100_OBJECTS = $(am__objects_1) \
	$(am__objects_2)
warzone2100_OBJECTS = $(am_warzone2100_OBJECTS)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(top_builddir)/win32/warzone2100.o \
#	$(am__DEPENDENCIES_1)
warzone2100_DEPENDENCIES = $(warzone2100_LIBS) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__warzone2100_portable_SOURCES_DIST = action.cpp advvis.cpp ai.cpp \
	astar.cpp atmos.cpp aud.cpp baseobject.cpp bucket3d.cpp \
	challenge.cpp cheat.cpp cmddroid.cpp combat.cpp \
	component.cpp configuration.cpp console.cpp data.cpp \
	design.cpp difficulty.cpp display3d.cpp display.cpp droid.cpp \
	edit3d.cpp effects.cpp feature.cpp fpath.cpp frontend.cpp \
	game.cpp gateway.cpp geometry.cpp group.cpp hci.cpp \
	ingameop.cpp init.cpp intdisplay.cpp intelmap.cpp intimage.cpp \
	intorder.cpp keybind.cpp keyedit.cpp keymap.cpp \
	level_lexer.cpp levels.cpp lighting.cpp loadsave.cpp loop.cpp \
	main.cpp map.cpp mapdisplay.cpp mapgrid.cpp mechanics.cpp \
	message.cpp miscimd.cpp mission.cpp modding.cpp move.cpp \
	multibot.cpp multigifts.cpp multiint.cpp multijoin.cpp \
	multilimit.cpp multimenu.cpp multiopt.cpp multiplay.cpp \
	multistat.cpp multistruct.cpp multisync.cpp objects.cpp \
	objmem.cpp oprint.cpp order.cpp pointtree.cpp power.cpp \
	projectile.cpp qtscript.cpp qtscriptdebug.cpp \
	qtscriptfuncs.cpp radar.cpp random.cpp raycast.cpp \
	research.cpp scores.cpp scriptai.cpp scriptcb.cpp \
	scriptextern.cpp scriptfuncs.cpp scriptobj.cpp scripttabs.cpp \
	scriptvals.cpp scriptvals_lexer.cpp scriptvals_parser.cpp \
	selection.cpp seqdisp.cpp stats.cpp structure.cpp template.cpp \
	terrain.cpp text.cpp texture.cpp transporter.cpp version.cpp \
	visibility.cpp warcam.cpp warzoneconfig.cpp wavecast.cpp \
	wrappers.cpp qtscriptdebug_moc.cpp
#am_warzone2100_portable_OBJECTS = $(am__objects_1) \
#	$(am__objects_2)
warzone2100_portable_OBJECTS = $(am_warzone2100_portable_OBJECTS)
##am__DEPENDENCIES_3 = $(top_builddir)/win32/warzone2100_portable.o \
##	$(am__DEPENDENCIES_1)
#warzone2100_portable_DEPENDENCIES =  \
#	$(warzone2100_portable_LIBS) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_3)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/action.Po ./$(DEPDIR)/advvis.Po \
	./$(DEPDIR)/ai.Po ./$(DEPDIR)/astar.Po ./$(DEPDIR)/atmos.Po \
	./$(DEPDIR)/aud.Po ./$(DEPDIR)/baseobject.Po \
	./$(DEPDIR)/bucket3d.Po ./$(DEPDIR)/challenge.Po \
	./$(DEPDIR)/cheat.Po \
	./$(DEPDIR)/cmddroid.Po ./$(DEPDIR)/combat.Po \
	./$(DEPDIR)/component.Po ./$(DEPDIR)/configuration.Po \
	./$(DEPDIR)/console.Po ./$(DEPDIR)/data.Po \
	./$(DEPDIR)/design.Po ./$(DEPDIR)/difficulty.Po \
	./$(DEPDIR)/display.Po ./$(DEPDIR)/display3d.Po \
	./$(DEPDIR)/droid.Po ./$(DEPDIR)/edit3d.Po \
	./$(DEPDIR)/effects.Po ./$(DEPDIR)/feature.Po \
	./$(DEPDIR)/fpath.Po ./$(DEPDIR)/frontend.Po \
	./$(DEPDIR)/game.Po ./$(DEPDIR)/gateway.Po \
	./$(DEPDIR)/geometry.Po ./$(DEPDIR)/group.Po \
	./$(DEPDIR)/hci.Po ./$(DEPDIR)/ingameop.Po ./$(DEPDIR)/init.Po \
	./$(DEPDIR)/intdisplay.Po ./$(DEPDIR)/intelmap.Po \
	./$(DEPDIR)/intimage.Po ./$(DEPDIR)/intorder.Po \
	./$(DEPDIR)/keybind.Po ./$(DEPDIR)/keyedit.Po \
	./$(DEPDIR)/keymap.Po ./$(DEPDIR)/level_lexer.Po \
	./$(DEPDIR)/levels.Po ./$(DEPDIR)/lighting.Po \
	./$(DEPDIR)/loadsave.Po ./$(DEPDIR)/loop.Po \
	./$(DEPDIR)/main.Po ./$(DEPDIR)/map.Po \
	./$(DEPDIR)/mapdisplay.Po ./$(DEPDIR)/mapgrid.Po \
	./$(DEPDIR)/mechanics.Po ./$(DEPDIR)/message.Po \
	./$(DEPDIR)/miscimd.Po ./$(DEPDIR)/mission.Po \
	./$(DEPDIR)/modding.Po ./$(DEPDIR)/move.Po \
	./$(DEPDIR)/multibot.Po ./$(DEPDIR)/multigifts.Po \
	./$(DEPDIR)/multiint.Po ./$(DEPDIR)/multijoin.Po \
	./$(DEPDIR)/multilimit.Po ./$(DEPDIR)/multimenu.Po \
	./$(DEPDIR)/multiopt.Po ./$(DEPDIR)/multiplay.Po \
	./$(DEPDIR)/multistat.Po ./$(DEPDIR)/multistruct.Po \
	./$(DEPDIR)/multisync.Po ./$(DEPDIR)/objects.Po \
	./$(DEPDIR)/objmem.Po ./$(DEPDIR)/oprint.Po \
	./$(DEPDIR)/order.Po ./$(DEPDIR)/pointtree.Po \
	./$(DEPDIR)/power.Po ./$(DEPDIR)/projectile.Po \
	./$(DEPDIR)/qtscript.Po ./$(DEPDIR)/qtscriptdebug.Po \
	./$(DEPDIR)/qtscriptdebug_moc.Po ./$(DEPDIR)/qtscriptfuncs.Po \
	./$(DEPDIR)/radar.Po ./$(DEPDIR)/random.Po \
	./$(DEPDIR)/raycast.Po ./$(DEPDIR)/research.Po \
	./$(DEPDIR)/scores.Po ./$(DEPDIR)/scriptai.Po \
	./$(DEPDIR)/scriptcb.Po ./$(DEPDIR)/scriptextern.Po \
	./$(DEPDIR)/scriptfuncs.Po ./$(DEPDIR)/scriptobj.Po \
	./$(DEPDIR)/scripttabs.Po ./$(DEPDIR)/scriptvals.Po \
	./$(DEPDIR)/scriptvals_lexer.Po \
	./$(DEPDIR)/scriptvals_parser.Po ./$(DEPDIR)/selection.Po \
	./$(DEPDIR)/seqdisp.Po ./$(DEPDIR)/stats.Po \
	./$(DEPDIR)/structure.Po ./$(DEPDIR)/template.Po \
	./$(DEPDIR)/terrain.Po ./$(DEPDIR)/text.Po \
	./$(DEPDIR)/texture.Po ./$(DEPDIR)/transporter.Po \
	./$(DEPDIR)/version.Po ./$(DEPDIR)/visibility.Po \
	./$(DEPDIR)/warcam.Po ./$(DEPDIR)/warzoneconfig.Po \
	./$(DEPDIR)/wavecast.Po ./$(DEPDIR)/wrappers.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(warzone2100_SOURCES) $(warzone2100_portable_SOURCES)
DIST_SOURCES = $(am__warzone2100_SOURCES_DIST) \
	$(am__warzone2100_portable_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
A2X = 
ACLOCAL = ${SHELL} /opt/warzone2100/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /opt/warzone2100/missing autoconf
AUTOHEADER = ${SHELL} /opt/warzone2100/missing autoheader
AUTOMAKE = ${SHELL} /opt/warzone2100/missing automake-1.16
AWK = gawk
BFD_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CCOMPILER = ccompiler
CC_FOR_BUILD = gcc
CFLAGS =  -fstack-protector -fPIC
CFLAGS_FOR_BUILD =  -fstack-protector -fPIC
CPP = gcc -E
CPPFLAGS = 
CPPFLAGS_FOR_BUILD = 
CXX = g++
CXXCOMPILER = cxxcompiler
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -std=c++11 -fstack-protector -fPIC
CXXFLAGS_FOR_BUILD =  -std=c++11 -fstack-protector -fPIC
CXX_FOR_BUILD = g++
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FONTCONFIG_CFLAGS = -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
FONTCONFIG_LIBS = -lfontconfig -lfreetype
FONT_CFLAGS = -I/usr/include/fribidi -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/fribidi -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
FONT_LIBS = -lfribidi -lfreetype -lfribidi -lfontconfig -lfreetype -lGL -lGLU -lGLEW -lGLU -lGL -lharfbuzz
FREETYPE_CFLAGS = -I/usr/include/freetype2 -I/usr/include/libpng16
FREETYPE_LIBS = -lfreetype
FRIBIDI_CFLAGS = -I/usr/include/fribidi
FRIBIDI_LIBS = -lfribidi
GETTEXT_MACRO_VERSION = 0.17
GLEW_CFLAGS = -I/usr/include/libdrm
GLEW_LIBS = -lGLEW -lGLU -lGL
GMSGFMT = :
GMSGFMT_015 = :
GREP = /bin/grep
HARFBUZZ_CFLAGS = -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
HARFBUZZ_LIBS = -lharfbuzz
IBERTY_LIBS = 
INSTALL = /bin/install -c
INSTALLER_COMPRESSION = lzma
INSTALLER_EXTDIR = 
INSTALLER_VERSION = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
LDFLAGS = -lz -shared -rdynamic  -fPIC -lpthread
LIBICONV = -liconv
LIBINTL = 
LIBOBJS = 
LIBS = 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /opt/warzone2100/missing makeinfo
MAKENSIS = 
MKDIR_P = /bin/mkdir -p
MOC5 = /usr/bin/moc-qt5
MSGFMT = :
MSGFMT_015 = :
MSGMERGE = :
OBJEXT = o
OPENAL_CFLAGS = -I/usr/include/AL
OPENAL_LIBS = -lopenal
OPENGL_LIBS = -lGL -lGLU
PACKAGE = warzone2100
PACKAGE_BUGREPORT = http://wz2100.net/
PACKAGE_NAME = Warzone 2100
PACKAGE_STRING = Warzone 2100 master
PACKAGE_TARNAME = warzone2100
PACKAGE_URL = 
PACKAGE_VERSION = master
PATH_SEPARATOR = :
PERL = /bin/perl
PERL_VERSION = This is perl 5, version 28, subversion 0 (v5.28.0) built for x86_64-linux
PHYSFS_LIBS = -lphysfs
PKGCONFIG_DEFAULT_PREFIX = 
PKGCONFIG_PREFIX = 
PKG_CONFIG = /bin/pkg-config
PNG_CFLAGS = -I/usr/include/libpng16
PNG_LIBS = -lpng16 -lz
POSUB = po
QT5_CFLAGS = -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_SCRIPT_LIB -DQT_CORE_LIB -I/usr/include/qt5/QtWidgets -I/usr/include/qt5 -I/usr/include/qt5/QtGui -I/usr/include/qt5 -I/usr/include/qt5/QtScript -I/usr/include/qt5 -I/usr/include/qt5/QtCore -I/usr/include/qt5
QT5_LIBS = -lQt5Widgets -lQt5Gui -lQt5Script -lQt5Core
QT5_PLUGIN = /usr
QT5_VERSION = 5.11.3
RANLIB = ranlib
RCC5 = /usr/bin/rcc-qt5
SDL_CFLAGS = -D_REENTRANT -I/usr/include/SDL2
SDL_LIBS = -lSDL2
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
THEORA_CFLAGS = 
THEORA_LIBS = -ltheora -logg
UIC5 = /usr/bin/uic-qt5
UNZIP = unzip
USE_NLS = yes
VERSION = master
VORBISFILE_CFLAGS = 
VORBISFILE_LIBS = -lvorbisfile
VORBIS_CFLAGS = 
VORBIS_LIBS = -lvorbis
WIN32_LIBS = 
WINDRES = 
WKHTMLTOPDF = 
WZ_C99FLAGS = 
WZ_CFLAGS =  -O0 -ggdb  -Wall -Wextra -Wno-sign-compare -Wcast-align -Wwrite-strings -Wpointer-arith -Wno-format-security -Wno-expansion-to-defined -Wstrict-prototypes -Wdeclaration-after-statement -Wno-enum-compare -Wno-stringop-truncation
WZ_CPPFLAGS =  -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DDEBUG -DWZ_DATADIR="\"${datadir}/${PACKAGE}\"" -DLOCALEDIR="\"${localedir}\"" -I$(top_srcdir) -I$(top_srcdir)/3rdparty -I$(top_srcdir)/3rdparty/glm -I$(top_srcdir)/3rdparty/miniupnp
WZ_CXXFLAGS =  -O0 -ggdb  -Wno-enum-compare -Wall -Wextra -Wno-unused-parameter -Wno-sign-compare -Wcast-align -Wwrite-strings -Wpointer-arith -Wno-format-security -Wno-expansion-to-defined -Wno-stringop-truncation -Wno-format-truncation -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16
XGETTEXT = :
XGETTEXT_015 = :
XGETTEXT_EXTRA_OPTIONS = 
XMKMF = 
XZ_OPT = -6
X_LIBS = -lX11 -lXrandr 
ZIP = zip
ZIP_UPDATE = --filesync
abs_builddir = /opt/warzone2100/src
abs_srcdir = /opt/warzone2100/src
abs_top_builddir = /opt/warzone2100
abs_top_srcdir = /opt/warzone2100
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
appdatadir = ${prefix}/share/metainfo
applicationdir = ${prefix}/share/applications
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
icondir = ${prefix}/share/icons
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /opt/warzone2100/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -DYY_NO_INPUT $(SDL_CFLAGS) $(PHYSFS_CFLAGS) \
	$(PNG_CFLAGS) $(VORBISFILE_CFLAGS) $(VORBIS_CFLAGS) \
	$(OPENAL_CFLAGS) $(FONT_CFLAGS) $(OPENGL_CFLAGS) \
	$(WZ_CPPFLAGS) $(GLEW_CFLAGS) $(am__append_2)
AM_CFLAGS = $(WZ_CFLAGS) $(am__append_1)
AM_CXXFLAGS = $(WZ_CXXFLAGS) $(QT5_CFLAGS) $(am__append_3)
MOCHEADER = \
	qtscriptdebug.h

MOCEDFILES = $(MOCHEADER:%.h=%_moc.cpp)
CLEANFILES = \
	$(BUILT_SOURCES) \
	autorevision.h.new \
	$(MOCEDFILES)

BUILT_SOURCES = \
	autorevision.h

EXTRA_DIST = \
	autorevision.cache \
	cursorselection

noinst_HEADERS = \
	action.h \
	actiondef.h \
	advvis.h \
	ai.h \
	astar.h \
	atmos.h \
	basedef.h \
	baseobject.h \
	bucket3d.h \
	cheat.h \
	challenge.h \
	cmddroiddef.h \
	cmddroid.h \
	combat.h \
	component.h \
	configuration.h \
	console.h \
	data.h \
	design.h \
	difficulty.h \
	display3ddef.h \
	display3d.h \
	displaydef.h \
	display.h \
	droiddef.h \
	droid.h \
	edit3d.h \
	effects.h \
	featuredef.h \
	feature.h \
	fpath.h \
	frend.h \
	frontend.h \
	game.h \
	gateway.h \
	geometry.h \
	group.h \
	hci.h \
	ingameop.h \
	init.h \
	intdisplay.h \
	intelmap.h \
	intfac.h \
	intimage.h \
	intorder.h \
	keybind.h \
	keyedit.h \
	keymap.h \
	levelint.h \
	levels.h \
	lighting.h \
	loadsave.h \
	loop.h \
	main.h \
	mapdisplay.h \
	mapgrid.h \
	map.h \
	mechanics.h \
	messagedef.h \
	message.h \
	miscimd.h \
	missiondef.h \
	mission.h \
	modding.h \
	movedef.h \
	move.h \
	multigifts.h \
	multiint.h \
	multijoin.h \
	multilimit.h \
	multimenu.h \
	multiplay.h \
	multirecv.h \
	multistat.h \
	objectdef.h \
	objects.h \
	objmem.h \
	oprint.h \
	orderdef.h \
	order.h \
	pointtree.h \
	positiondef.h \
	power.h \
	projectiledef.h \
	projectile.h \
	qtscript.h \
	qtscriptfuncs.h \
	radar.h \
	random.h \
	raycast.h \
	researchdef.h \
	research.h \
	scores.h \
	scriptai.h \
	scriptcb.h \
	scriptextern.h \
	scriptfuncs.h \
	scriptobj.h \
	scripttabs.h \
	scriptvals.h \
	scriptvals_parser.h \
	selection.h \
	seqdisp.h \
	statsdef.h \
	stats.h \
	stringdef.h \
	structuredef.h \
	structure.h \
	template.h \
	terrain.h \
	text.h \
	texture.h \
	transporter.h \
	visibility.h \
	version.h \
	warcam.h \
	warzoneconfig.h \
	wavecast.h \
	weapondef.h \
	wrappers.h \
	$(MOCHEADER)

nodist_COMMONSOURCES = \
	qtscriptdebug_moc.cpp

COMMONSOURCES = \
	action.cpp \
	advvis.cpp \
	ai.cpp \
	astar.cpp \
	atmos.cpp \
	aud.cpp \
	baseobject.cpp \
	bucket3d.cpp \
	challenge.cpp \
	cheat.cpp \
	cmddroid.cpp \
	combat.cpp \
	component.cpp \
	configuration.cpp \
	console.cpp \
	data.cpp \
	design.cpp \
	difficulty.cpp \
	display3d.cpp \
	display.cpp \
	droid.cpp \
	edit3d.cpp \
	effects.cpp \
	feature.cpp \
	fpath.cpp \
	frontend.cpp \
	game.cpp \
	gateway.cpp \
	geometry.cpp \
	group.cpp \
	hci.cpp \
	ingameop.cpp \
	init.cpp \
	intdisplay.cpp \
	intelmap.cpp \
	intimage.cpp \
	intorder.cpp \
	keybind.cpp \
	keyedit.cpp \
	keymap.cpp \
	level_lexer.cpp \
	levels.cpp \
	lighting.cpp \
	loadsave.cpp \
	loop.cpp \
	main.cpp \
	map.cpp \
	mapdisplay.cpp \
	mapgrid.cpp \
	mechanics.cpp \
	message.cpp \
	miscimd.cpp \
	mission.cpp \
	modding.cpp \
	move.cpp \
	multibot.cpp \
	multigifts.cpp \
	multiint.cpp \
	multijoin.cpp \
	multilimit.cpp \
	multimenu.cpp \
	multiopt.cpp \
	multiplay.cpp \
	multistat.cpp \
	multistruct.cpp \
	multisync.cpp \
	objects.cpp \
	objmem.cpp \
	oprint.cpp \
	order.cpp \
	pointtree.cpp \
	power.cpp \
	projectile.cpp \
	qtscript.cpp \
	qtscriptdebug.cpp \
	qtscriptfuncs.cpp \
	radar.cpp \
	random.cpp \
	raycast.cpp \
	research.cpp \
	scores.cpp \
	scriptai.cpp \
	scriptcb.cpp \
	scriptextern.cpp \
	scriptfuncs.cpp \
	scriptobj.cpp \
	scripttabs.cpp \
	scriptvals.cpp \
	scriptvals_lexer.cpp \
	scriptvals_parser.cpp \
	selection.cpp \
	seqdisp.cpp \
	stats.cpp \
	structure.cpp \
	template.cpp \
	terrain.cpp \
	text.cpp \
	texture.cpp \
	transporter.cpp \
	version.cpp \
	visibility.cpp \
	warcam.cpp \
	warzoneconfig.cpp \
	wavecast.cpp \
	wrappers.cpp

COMMONLIBS = \
	$(top_builddir)/lib/widget/libwidget.a \
	$(top_builddir)/lib/sequence/libsequence.a \
	$(top_builddir)/lib/sound/libsound.a \
	$(top_builddir)/lib/script/libscript.a \
	$(top_builddir)/lib/netplay/libnetplay.a \
	$(top_builddir)/lib/ivis_opengl/libivis_opengl.a \
	$(top_builddir)/lib/gamelib/libgamelib.a \
	$(top_builddir)/lib/exceptionhandler/libexceptionhandler.a \
	$(top_builddir)/3rdparty/miniupnp/libminiupnpc.a

#warzone2100_portable_SOURCES = $(COMMONSOURCES) $(nodist_COMMONSOURCES)

# lib/framework (and dependencies)
#warzone2100_portable_LIBS = $(COMMONLIBS) \
#	$(am__append_4) $(am__append_6) \
#	$(top_builddir)/lib/framework/libframework.a \
#	$(top_builddir)/3rdparty/micro-ecc/libmicroecc.a \
#	$(top_builddir)/3rdparty/sha2/libsha2.a \
#	$(top_builddir)/3rdparty/utf8proc/libutf8proc.a
warzone2100_SOURCES = $(COMMONSOURCES) $(nodist_COMMONSOURCES)
warzone2100_LIBS = $(COMMONLIBS) $(am__append_5) \
	$(am__append_7) \
	$(top_builddir)/lib/framework/libframework.a \
	$(top_builddir)/3rdparty/micro-ecc/libmicroecc.a \
	$(top_builddir)/3rdparty/sha2/libsha2.a \
	$(top_builddir)/3rdparty/utf8proc/libutf8proc.a
SQT5_LIBS = 

# Here, we need to bring in the "plugins" for Qt5 and they MUST come before the other QT libs.
# FIXME: At a future date, we should check if they want static builds, but, since we only support those for now...
#SQT5_LIBS = -L$(QT5_PLUGIN)/plugins/platforms -lqwindows -lqminimal -lQt5AccessibilitySupport -lQt5ThemeSupport -lQt5FontDatabaseSupport -lQt5EventDispatcherSupport
SQT5_LIBS2 = 
#warzone2100_portable_LDADD =  \
#	$(warzone2100_portable_LIBS) $(LTLIBINTL) \
#	$(SDL_LIBS) $(PHYSFS_LIBS) $(PNG_LIBS) \
#	$(VORBISFILE_LIBS) $(VORBIS_LIBS) \
#	$(THEORA_LIBS) $(OPENAL_LIBS) $(FONT_LIBS) \
#	$(OPENGL_LIBS) $(SQT5_LIBS) $(QT5_LIBS) \
#	$(GLEW_LIBS) $(X_LIBS) $(X_EXTRA_LIBS) \
#	$(LDFLAGS) $(am__append_8)
warzone2100_LDADD = $(warzone2100_LIBS) $(LTLIBINTL) \
	$(SDL_LIBS) $(PHYSFS_LIBS) $(PNG_LIBS) \
	$(VORBISFILE_LIBS) $(VORBIS_LIBS) \
	$(THEORA_LIBS) $(OPENAL_LIBS) $(FONT_LIBS) \
	$(OPENGL_LIBS) $(SQT5_LIBS) $(QT5_LIBS) \
	$(GLEW_LIBS) $(X_LIBS) $(X_EXTRA_LIBS) \
	$(LDFLAGS) $(am__append_9)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(PROGRAMS)" || rm -f $(PROGRAMS)

warzone2100$(EXEEXT): $(warzone2100_OBJECTS) $(warzone2100_DEPENDENCIES) $(EXTRA_warzone2100_DEPENDENCIES) 
	@rm -f warzone2100$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(warzone2100_OBJECTS) $(warzone2100_LDADD) $(LIBS)

warzone2100_portable$(EXEEXT): $(warzone2100_portable_OBJECTS) $(warzone2100_portable_DEPENDENCIES) $(EXTRA_warzone2100_portable_DEPENDENCIES) 
	@rm -f warzone2100_portable$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(warzone2100_portable_OBJECTS) $(warzone2100_portable_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/action.Po # am--include-marker
include ./$(DEPDIR)/advvis.Po # am--include-marker
include ./$(DEPDIR)/ai.Po # am--include-marker
include ./$(DEPDIR)/astar.Po # am--include-marker
include ./$(DEPDIR)/atmos.Po # am--include-marker
include ./$(DEPDIR)/aud.Po # am--include-marker
include ./$(DEPDIR)/baseobject.Po # am--include-marker
include ./$(DEPDIR)/bucket3d.Po # am--include-marker
include ./$(DEPDIR)/challenge.Po # am--include-marker
include ./$(DEPDIR)/cheat.Po # am--include-marker
include ./$(DEPDIR)/cmddroid.Po # am--include-marker
include ./$(DEPDIR)/combat.Po # am--include-marker
include ./$(DEPDIR)/component.Po # am--include-marker
include ./$(DEPDIR)/configuration.Po # am--include-marker
include ./$(DEPDIR)/console.Po # am--include-marker
include ./$(DEPDIR)/data.Po # am--include-marker
include ./$(DEPDIR)/design.Po # am--include-marker
include ./$(DEPDIR)/difficulty.Po # am--include-marker
include ./$(DEPDIR)/display.Po # am--include-marker
include ./$(DEPDIR)/display3d.Po # am--include-marker
include ./$(DEPDIR)/droid.Po # am--include-marker
include ./$(DEPDIR)/edit3d.Po # am--include-marker
include ./$(DEPDIR)/effects.Po # am--include-marker
include ./$(DEPDIR)/feature.Po # am--include-marker
include ./$(DEPDIR)/fpath.Po # am--include-marker
include ./$(DEPDIR)/frontend.Po # am--include-marker
include ./$(DEPDIR)/game.Po # am--include-marker
include ./$(DEPDIR)/gateway.Po # am--include-marker
include ./$(DEPDIR)/geometry.Po # am--include-marker
include ./$(DEPDIR)/group.Po # am--include-marker
include ./$(DEPDIR)/hci.Po # am--include-marker
include ./$(DEPDIR)/ingameop.Po # am--include-marker
include ./$(DEPDIR)/init.Po # am--include-marker
include ./$(DEPDIR)/intdisplay.Po # am--include-marker
include ./$(DEPDIR)/intelmap.Po # am--include-marker
include ./$(DEPDIR)/intimage.Po # am--include-marker
include ./$(DEPDIR)/intorder.Po # am--include-marker
include ./$(DEPDIR)/keybind.Po # am--include-marker
include ./$(DEPDIR)/keyedit.Po # am--include-marker
include ./$(DEPDIR)/keymap.Po # am--include-marker
include ./$(DEPDIR)/level_lexer.Po # am--include-marker
include ./$(DEPDIR)/levels.Po # am--include-marker
include ./$(DEPDIR)/lighting.Po # am--include-marker
include ./$(DEPDIR)/loadsave.Po # am--include-marker
include ./$(DEPDIR)/loop.Po # am--include-marker
include ./$(DEPDIR)/main.Po # am--include-marker
include ./$(DEPDIR)/map.Po # am--include-marker
include ./$(DEPDIR)/mapdisplay.Po # am--include-marker
include ./$(DEPDIR)/mapgrid.Po # am--include-marker
include ./$(DEPDIR)/mechanics.Po # am--include-marker
include ./$(DEPDIR)/message.Po # am--include-marker
include ./$(DEPDIR)/miscimd.Po # am--include-marker
include ./$(DEPDIR)/mission.Po # am--include-marker
include ./$(DEPDIR)/modding.Po # am--include-marker
include ./$(DEPDIR)/move.Po # am--include-marker
include ./$(DEPDIR)/multibot.Po # am--include-marker
include ./$(DEPDIR)/multigifts.Po # am--include-marker
include ./$(DEPDIR)/multiint.Po # am--include-marker
include ./$(DEPDIR)/multijoin.Po # am--include-marker
include ./$(DEPDIR)/multilimit.Po # am--include-marker
include ./$(DEPDIR)/multimenu.Po # am--include-marker
include ./$(DEPDIR)/multiopt.Po # am--include-marker
include ./$(DEPDIR)/multiplay.Po # am--include-marker
include ./$(DEPDIR)/multistat.Po # am--include-marker
include ./$(DEPDIR)/multistruct.Po # am--include-marker
include ./$(DEPDIR)/multisync.Po # am--include-marker
include ./$(DEPDIR)/objects.Po # am--include-marker
include ./$(DEPDIR)/objmem.Po # am--include-marker
include ./$(DEPDIR)/oprint.Po # am--include-marker
include ./$(DEPDIR)/order.Po # am--include-marker
include ./$(DEPDIR)/pointtree.Po # am--include-marker
include ./$(DEPDIR)/power.Po # am--include-marker
include ./$(DEPDIR)/projectile.Po # am--include-marker
include ./$(DEPDIR)/qtscript.Po # am--include-marker
include ./$(DEPDIR)/qtscriptdebug.Po # am--include-marker
include ./$(DEPDIR)/qtscriptdebug_moc.Po # am--include-marker
include ./$(DEPDIR)/qtscriptfuncs.Po # am--include-marker
include ./$(DEPDIR)/radar.Po # am--include-marker
include ./$(DEPDIR)/random.Po # am--include-marker
include ./$(DEPDIR)/raycast.Po # am--include-marker
include ./$(DEPDIR)/research.Po # am--include-marker
include ./$(DEPDIR)/scores.Po # am--include-marker
include ./$(DEPDIR)/scriptai.Po # am--include-marker
include ./$(DEPDIR)/scriptcb.Po # am--include-marker
include ./$(DEPDIR)/scriptextern.Po # am--include-marker
include ./$(DEPDIR)/scriptfuncs.Po # am--include-marker
include ./$(DEPDIR)/scriptobj.Po # am--include-marker
include ./$(DEPDIR)/scripttabs.Po # am--include-marker
include ./$(DEPDIR)/scriptvals.Po # am--include-marker
include ./$(DEPDIR)/scriptvals_lexer.Po # am--include-marker
include ./$(DEPDIR)/scriptvals_parser.Po # am--include-marker
include ./$(DEPDIR)/selection.Po # am--include-marker
include ./$(DEPDIR)/seqdisp.Po # am--include-marker
include ./$(DEPDIR)/stats.Po # am--include-marker
include ./$(DEPDIR)/structure.Po # am--include-marker
include ./$(DEPDIR)/template.Po # am--include-marker
include ./$(DEPDIR)/terrain.Po # am--include-marker
include ./$(DEPDIR)/text.Po # am--include-marker
include ./$(DEPDIR)/texture.Po # am--include-marker
include ./$(DEPDIR)/transporter.Po # am--include-marker
include ./$(DEPDIR)/version.Po # am--include-marker
include ./$(DEPDIR)/visibility.Po # am--include-marker
include ./$(DEPDIR)/warcam.Po # am--include-marker
include ./$(DEPDIR)/warzoneconfig.Po # am--include-marker
include ./$(DEPDIR)/wavecast.Po # am--include-marker
include ./$(DEPDIR)/wrappers.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/action.Po
	-rm -f ./$(DEPDIR)/advvis.Po
	-rm -f ./$(DEPDIR)/ai.Po
	-rm -f ./$(DEPDIR)/astar.Po
	-rm -f ./$(DEPDIR)/atmos.Po
	-rm -f ./$(DEPDIR)/aud.Po
	-rm -f ./$(DEPDIR)/baseobject.Po
	-rm -f ./$(DEPDIR)/bucket3d.Po
	-rm -f ./$(DEPDIR)/challenge.Po
	-rm -f ./$(DEPDIR)/cheat.Po
	-rm -f ./$(DEPDIR)/cmddroid.Po
	-rm -f ./$(DEPDIR)/combat.Po
	-rm -f ./$(DEPDIR)/component.Po
	-rm -f ./$(DEPDIR)/configuration.Po
	-rm -f ./$(DEPDIR)/console.Po
	-rm -f ./$(DEPDIR)/data.Po
	-rm -f ./$(DEPDIR)/design.Po
	-rm -f ./$(DEPDIR)/difficulty.Po
	-rm -f ./$(DEPDIR)/display.Po
	-rm -f ./$(DEPDIR)/display3d.Po
	-rm -f ./$(DEPDIR)/droid.Po
	-rm -f ./$(DEPDIR)/edit3d.Po
	-rm -f ./$(DEPDIR)/effects.Po
	-rm -f ./$(DEPDIR)/feature.Po
	-rm -f ./$(DEPDIR)/fpath.Po
	-rm -f ./$(DEPDIR)/frontend.Po
	-rm -f ./$(DEPDIR)/game.Po
	-rm -f ./$(DEPDIR)/gateway.Po
	-rm -f ./$(DEPDIR)/geometry.Po
	-rm -f ./$(DEPDIR)/group.Po
	-rm -f ./$(DEPDIR)/hci.Po
	-rm -f ./$(DEPDIR)/ingameop.Po
	-rm -f ./$(DEPDIR)/init.Po
	-rm -f ./$(DEPDIR)/intdisplay.Po
	-rm -f ./$(DEPDIR)/intelmap.Po
	-rm -f ./$(DEPDIR)/intimage.Po
	-rm -f ./$(DEPDIR)/intorder.Po
	-rm -f ./$(DEPDIR)/keybind.Po
	-rm -f ./$(DEPDIR)/keyedit.Po
	-rm -f ./$(DEPDIR)/keymap.Po
	-rm -f ./$(DEPDIR)/level_lexer.Po
	-rm -f ./$(DEPDIR)/levels.Po
	-rm -f ./$(DEPDIR)/lighting.Po
	-rm -f ./$(DEPDIR)/loadsave.Po
	-rm -f ./$(DEPDIR)/loop.Po
	-rm -f ./$(DEPDIR)/main.Po
	-rm -f ./$(DEPDIR)/map.Po
	-rm -f ./$(DEPDIR)/mapdisplay.Po
	-rm -f ./$(DEPDIR)/mapgrid.Po
	-rm -f ./$(DEPDIR)/mechanics.Po
	-rm -f ./$(DEPDIR)/message.Po
	-rm -f ./$(DEPDIR)/miscimd.Po
	-rm -f ./$(DEPDIR)/mission.Po
	-rm -f ./$(DEPDIR)/modding.Po
	-rm -f ./$(DEPDIR)/move.Po
	-rm -f ./$(DEPDIR)/multibot.Po
	-rm -f ./$(DEPDIR)/multigifts.Po
	-rm -f ./$(DEPDIR)/multiint.Po
	-rm -f ./$(DEPDIR)/multijoin.Po
	-rm -f ./$(DEPDIR)/multilimit.Po
	-rm -f ./$(DEPDIR)/multimenu.Po
	-rm -f ./$(DEPDIR)/multiopt.Po
	-rm -f ./$(DEPDIR)/multiplay.Po
	-rm -f ./$(DEPDIR)/multistat.Po
	-rm -f ./$(DEPDIR)/multistruct.Po
	-rm -f ./$(DEPDIR)/multisync.Po
	-rm -f ./$(DEPDIR)/objects.Po
	-rm -f ./$(DEPDIR)/objmem.Po
	-rm -f ./$(DEPDIR)/oprint.Po
	-rm -f ./$(DEPDIR)/order.Po
	-rm -f ./$(DEPDIR)/pointtree.Po
	-rm -f ./$(DEPDIR)/power.Po
	-rm -f ./$(DEPDIR)/projectile.Po
	-rm -f ./$(DEPDIR)/qtscript.Po
	-rm -f ./$(DEPDIR)/qtscriptdebug.Po
	-rm -f ./$(DEPDIR)/qtscriptdebug_moc.Po
	-rm -f ./$(DEPDIR)/qtscriptfuncs.Po
	-rm -f ./$(DEPDIR)/radar.Po
	-rm -f ./$(DEPDIR)/random.Po
	-rm -f ./$(DEPDIR)/raycast.Po
	-rm -f ./$(DEPDIR)/research.Po
	-rm -f ./$(DEPDIR)/scores.Po
	-rm -f ./$(DEPDIR)/scriptai.Po
	-rm -f ./$(DEPDIR)/scriptcb.Po
	-rm -f ./$(DEPDIR)/scriptextern.Po
	-rm -f ./$(DEPDIR)/scriptfuncs.Po
	-rm -f ./$(DEPDIR)/scriptobj.Po
	-rm -f ./$(DEPDIR)/scripttabs.Po
	-rm -f ./$(DEPDIR)/scriptvals.Po
	-rm -f ./$(DEPDIR)/scriptvals_lexer.Po
	-rm -f ./$(DEPDIR)/scriptvals_parser.Po
	-rm -f ./$(DEPDIR)/selection.Po
	-rm -f ./$(DEPDIR)/seqdisp.Po
	-rm -f ./$(DEPDIR)/stats.Po
	-rm -f ./$(DEPDIR)/structure.Po
	-rm -f ./$(DEPDIR)/template.Po
	-rm -f ./$(DEPDIR)/terrain.Po
	-rm -f ./$(DEPDIR)/text.Po
	-rm -f ./$(DEPDIR)/texture.Po
	-rm -f ./$(DEPDIR)/transporter.Po
	-rm -f ./$(DEPDIR)/version.Po
	-rm -f ./$(DEPDIR)/visibility.Po
	-rm -f ./$(DEPDIR)/warcam.Po
	-rm -f ./$(DEPDIR)/warzoneconfig.Po
	-rm -f ./$(DEPDIR)/wavecast.Po
	-rm -f ./$(DEPDIR)/wrappers.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/action.Po
	-rm -f ./$(DEPDIR)/advvis.Po
	-rm -f ./$(DEPDIR)/ai.Po
	-rm -f ./$(DEPDIR)/astar.Po
	-rm -f ./$(DEPDIR)/atmos.Po
	-rm -f ./$(DEPDIR)/aud.Po
	-rm -f ./$(DEPDIR)/baseobject.Po
	-rm -f ./$(DEPDIR)/bucket3d.Po
	-rm -f ./$(DEPDIR)/challenge.Po
	-rm -f ./$(DEPDIR)/cheat.Po
	-rm -f ./$(DEPDIR)/cmddroid.Po
	-rm -f ./$(DEPDIR)/combat.Po
	-rm -f ./$(DEPDIR)/component.Po
	-rm -f ./$(DEPDIR)/configuration.Po
	-rm -f ./$(DEPDIR)/console.Po
	-rm -f ./$(DEPDIR)/data.Po
	-rm -f ./$(DEPDIR)/design.Po
	-rm -f ./$(DEPDIR)/difficulty.Po
	-rm -f ./$(DEPDIR)/display.Po
	-rm -f ./$(DEPDIR)/display3d.Po
	-rm -f ./$(DEPDIR)/droid.Po
	-rm -f ./$(DEPDIR)/edit3d.Po
	-rm -f ./$(DEPDIR)/effects.Po
	-rm -f ./$(DEPDIR)/feature.Po
	-rm -f ./$(DEPDIR)/fpath.Po
	-rm -f ./$(DEPDIR)/frontend.Po
	-rm -f ./$(DEPDIR)/game.Po
	-rm -f ./$(DEPDIR)/gateway.Po
	-rm -f ./$(DEPDIR)/geometry.Po
	-rm -f ./$(DEPDIR)/group.Po
	-rm -f ./$(DEPDIR)/hci.Po
	-rm -f ./$(DEPDIR)/ingameop.Po
	-rm -f ./$(DEPDIR)/init.Po
	-rm -f ./$(DEPDIR)/intdisplay.Po
	-rm -f ./$(DEPDIR)/intelmap.Po
	-rm -f ./$(DEPDIR)/intimage.Po
	-rm -f ./$(DEPDIR)/intorder.Po
	-rm -f ./$(DEPDIR)/keybind.Po
	-rm -f ./$(DEPDIR)/keyedit.Po
	-rm -f ./$(DEPDIR)/keymap.Po
	-rm -f ./$(DEPDIR)/level_lexer.Po
	-rm -f ./$(DEPDIR)/levels.Po
	-rm -f ./$(DEPDIR)/lighting.Po
	-rm -f ./$(DEPDIR)/loadsave.Po
	-rm -f ./$(DEPDIR)/loop.Po
	-rm -f ./$(DEPDIR)/main.Po
	-rm -f ./$(DEPDIR)/map.Po
	-rm -f ./$(DEPDIR)/mapdisplay.Po
	-rm -f ./$(DEPDIR)/mapgrid.Po
	-rm -f ./$(DEPDIR)/mechanics.Po
	-rm -f ./$(DEPDIR)/message.Po
	-rm -f ./$(DEPDIR)/miscimd.Po
	-rm -f ./$(DEPDIR)/mission.Po
	-rm -f ./$(DEPDIR)/modding.Po
	-rm -f ./$(DEPDIR)/move.Po
	-rm -f ./$(DEPDIR)/multibot.Po
	-rm -f ./$(DEPDIR)/multigifts.Po
	-rm -f ./$(DEPDIR)/multiint.Po
	-rm -f ./$(DEPDIR)/multijoin.Po
	-rm -f ./$(DEPDIR)/multilimit.Po
	-rm -f ./$(DEPDIR)/multimenu.Po
	-rm -f ./$(DEPDIR)/multiopt.Po
	-rm -f ./$(DEPDIR)/multiplay.Po
	-rm -f ./$(DEPDIR)/multistat.Po
	-rm -f ./$(DEPDIR)/multistruct.Po
	-rm -f ./$(DEPDIR)/multisync.Po
	-rm -f ./$(DEPDIR)/objects.Po
	-rm -f ./$(DEPDIR)/objmem.Po
	-rm -f ./$(DEPDIR)/oprint.Po
	-rm -f ./$(DEPDIR)/order.Po
	-rm -f ./$(DEPDIR)/pointtree.Po
	-rm -f ./$(DEPDIR)/power.Po
	-rm -f ./$(DEPDIR)/projectile.Po
	-rm -f ./$(DEPDIR)/qtscript.Po
	-rm -f ./$(DEPDIR)/qtscriptdebug.Po
	-rm -f ./$(DEPDIR)/qtscriptdebug_moc.Po
	-rm -f ./$(DEPDIR)/qtscriptfuncs.Po
	-rm -f ./$(DEPDIR)/radar.Po
	-rm -f ./$(DEPDIR)/random.Po
	-rm -f ./$(DEPDIR)/raycast.Po
	-rm -f ./$(DEPDIR)/research.Po
	-rm -f ./$(DEPDIR)/scores.Po
	-rm -f ./$(DEPDIR)/scriptai.Po
	-rm -f ./$(DEPDIR)/scriptcb.Po
	-rm -f ./$(DEPDIR)/scriptextern.Po
	-rm -f ./$(DEPDIR)/scriptfuncs.Po
	-rm -f ./$(DEPDIR)/scriptobj.Po
	-rm -f ./$(DEPDIR)/scripttabs.Po
	-rm -f ./$(DEPDIR)/scriptvals.Po
	-rm -f ./$(DEPDIR)/scriptvals_lexer.Po
	-rm -f ./$(DEPDIR)/scriptvals_parser.Po
	-rm -f ./$(DEPDIR)/selection.Po
	-rm -f ./$(DEPDIR)/seqdisp.Po
	-rm -f ./$(DEPDIR)/stats.Po
	-rm -f ./$(DEPDIR)/structure.Po
	-rm -f ./$(DEPDIR)/template.Po
	-rm -f ./$(DEPDIR)/terrain.Po
	-rm -f ./$(DEPDIR)/text.Po
	-rm -f ./$(DEPDIR)/texture.Po
	-rm -f ./$(DEPDIR)/transporter.Po
	-rm -f ./$(DEPDIR)/version.Po
	-rm -f ./$(DEPDIR)/visibility.Po
	-rm -f ./$(DEPDIR)/warcam.Po
	-rm -f ./$(DEPDIR)/warzoneconfig.Po
	-rm -f ./$(DEPDIR)/wavecast.Po
	-rm -f ./$(DEPDIR)/wrappers.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


%_moc.cpp: %.h
	$(MOC5) -o $@ $<

.PHONY: autorevision.h

autorevision.h autorevision.cache:
	cd $(top_srcdir) && ./build_tools/autorevision -t h -o "$(abs_builddir)/autorevision.cache" > "$(abs_builddir)/autorevision.h.new"
	cmp -s autorevision.h.new autorevision.h && rm autorevision.h.new || mv -f autorevision.h.new autorevision.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
